# [[http://www.commandlinefu.com] [commandlinefu]]

* cat /etc/passwd
list all users/check home directory

* uname -a
check ubuntu version

* disk
  - df -h # check system disk usage
  - du -sh /home/  # check usage under /home
  - du -sh .[!.]* *  show disk usage under current folder with showing hidden folder and files
* lsof -w -n -i tcp:8080  # find process using a port
* gem list | cut -d" " -f1 | xargs gem uninstall -aIx   # remove all gems
* sudo su -  # switch to root
* netstat -a # check network port listening etc.
* bash scripting
** assign command output to a variable
VARNAME=$(ps aux | grep [X]vfb)
Note: no space on both side of '='
** if else fi
if [ "$(expr substr $(uname -s) 1 9)" == "CYGWIN_NT" ]; then
    cmd /c go_ci.bat "$@"
else
    bash ./ci_linux.sh "$@"
fi
** change default prompt
\a : an ASCII bell character (07)
\d : the date in "Weekday Month Date" format (e.g., "Tue May 26")
\D{format} :	the format is passed to strftime(3) and the result is inserted into the prompt string; an empty format results in a locale-specific time representation. The braces are required
\e : an ASCII escape character (033)
\h : the hostname up to the first '.'
\H : the hostname
\j : the number of jobs currently managed by the shell
\l : the basename of the shell’s terminal device name
\n : newline
\r : carriage return
\s : the name of the shell, the basename of $0 (the portion following the final slash)
\t : the current time in 24-hour HH:MM:SS format
\T : the current time in 12-hour HH:MM:SS format
\@ : the current time in 12-hour am/pm format
\A : the current time in 24-hour HH:MM format
\u : the username of the current user
\v : the version of bash (e.g., 2.00)
\V : the release of bash, version + patch level (e.g., 2.00.0)
\w : the current working directory, with $HOME abbreviated with a tilde
\W : the basename of the current working directory, with $HOME abbreviated with a tilde
\! : the history number of this command
\# : the command number of this command
\$ : if the effective UID is 0, a #, otherwise a $
\nnn : the character corresponding to the octal number nnn
\\ : a backslash
\[ : begin a sequence of non-printing characters, which could be used to embed a terminal control sequence into the prompt
\] : end a sequence of non-printing characters

# If id command returns zero, you’ve root access.
if [ $(id -u) -eq 0 ];
then # you are root, set red colour prompt
  PS1="\\[$(tput setaf 1)\\]\\w #\\[$(tput sgr0)\\]"
else # normal
  PS1="\\w$ "
fi

* !$ reuse last command's parameter
* uninstall all gems
gem list | cut -d" " -f1 | xargs gem uninstall -aIx'
* show a file
  - tail -f /file/  live updating of a file
* sed
** delete a line
   - by line number
     sed -i 8d ~/.ssh/known_hosts


* packages
  - dpkg --get-selections | grep -v deinstall
  - sudo dpkg --configure -a  # fix issues of missing file in apt-get install. normally this means the dpkg is corrupted

* postgres
** create custom users
   - su - postgres  // switch to default admin user
   - createuser -s -P // <username> create a super user with password prompt
   - dropuser // to delete a role
** create database
   - createdb clojure
   - psql -d clojure
   - grant all privileges on database clojure to clojure_user
   - modify pg_hba.conf to use md5 password authentication for localhost
** userful psql command
   - sudo su - postgres //switch to postgres super user
   - psql -d <database> //connect to the database as postgres
** restart
   sudo /etc/init.d/postgresql restart
** psql to start command prompt
** roles
SELECT rolname FROM pg_roles;
\du to list all roles

* Date And Time
  - /etc/timezone for timezone info
  - date to dislay date and time
  - dpkg-reconfigure --frontend noninteractive tzdata

* dpkg-query -L libapache2-mod-jk
* grep
  - grep -F /str/    grep plain string
  - grep -E grep extended regular expression

* grunt
** grunt warning:watch ENOSPC
fix: echo fs.inotify.max_user_watches=524288 | sudo tee -a /etc/sysctl.conf && sudo sysctl -p
* [[http://www.gnu.org/software/bash/manual/bash.html#Bash-Conditional-Expressions][Bash Reference Manual]]
  - echo $? last command exit status
* environment variable
  - unset <env>
* php
  - php --ini show loaded config
  - restart webserver after restart
* mysql
  - mysql -h localhost -u wordpress -p
** remove mysql ubuntu
sudo apt-get remove --purge mysql-server mysql-client mysql-common
sudo apt-get autoremove
sudo apt-get autoclean
----
sudo apt-get remove --purge mysql-server mysql-client mysql-common
sudo deluser mysql
sudo rm -rf /var/lib/mysql
sudo apt-get purge mysql-server-core-5.5
sudo apt-get purge mysql-client-core-5.5
** create user
mysql> GRANT ALL PRIVILEGES ON *.* TO 'monty'@'localhost'
    ->     IDENTIFIED BY 'some_pass' WITH GRANT OPTION;
mysql> GRANT ALL PRIVILEGES ON *.* TO 'monty'@'%'
    ->     IDENTIFIED BY 'some_pass' WITH GRANT OPTION;
mysql> GRANT RELOAD,PROCESS ON *.* TO 'admin'@'localhost';
mysql> GRANT USAGE ON *.* TO 'dummy'@'localhost';

** create database
create database <db>
* curl
  - -XPOST use post
  - -i show response header
* ls
  - -S sort by size
* jmxterm
  - page: http://wiki.cyclopsgroup.org/jmxterm/
  - usage
    * java -jar jmxterm-1.0-alpha-3-uber.jar
    * > open localhost:51001
    * > beans # display all beans
    * > bean <bean name> # set current bean
    * > set <key> <val> # set bean values
    * > info -b <bean name> # display detail of a bean
    * > get # get value of a bean attribute
    * > set -b <bean> Attribute Value # set bean attribute
* find
  - recursively rename files
  find . -name 'productcatalogapi.properties' -exec bash -c 'mv $0 ${0/productcatalogapi.properties}core-services.properties' {} \;
find command: 15 examples to exclude directories using prune

  

   When we search for files in Unix/Linux using the find command, we might want to search for files only in some specific directories, OR to search in all directories except a particular directory and so on.  prune option in the find command is the one for excluding a directory within a directory tree. In this article of find command, we will use how to use the prune option of the find command to exclude directories with some examples.

The simple find command below lists all the files and directories in the directory tree. The . indicates the path to search for the files. We will see the usage of prune using this directory tree:
$ find .
.
./area.pm
./C
./C/temp
./C/f2.c
./test.c
./temp
./temp/a.c
The functionality of prune is simple: "If the file is a directory, do not descend or traverse into it." Sounds simple, isn't it? Let us see some examples:

1. Prune usage: 
$ find . -prune
.
The find command works like this: It starts finding files from the path provided in the command which in this case is the current directory(.). From here, it traverses through all the files in the entire tree and prints those files matching the criteria specified. -prune will not allow the find command to descend into the file any further if it is a directory. Hence, when find starts with the current directory, prune does not allow it to descend the current directory since it itself is a directory, and hence only the current directory gets printed, not the files within the directory. The print happens here because it is the default functionality of find to print anything which is true. 

2. Find all files and directories present only in the current directory (Simulation of ls command). 
$ find . ! -name . -prune
./area.pm
./C
./test.c
./temp      
   "! -name . " means any file other than current dirctory. So, prune will prune all the directories other than the current directory. Hence, this will end up not allowing find to descend into any sub-directory in the current directory, as a result, we get all the files and directories present in the path specified. 

3. Same as above using another option: 
$ find ./* -prune
./area.pm
./CPP
./temp
./test.c
Keep in mind, the find command accepts a path or a series of paths to search. This ./* gets translated to all the files and directories in the current directory. So, from this list, prune will prevent from descending into the sub-directories. Note: This approach is not recommended, because i) we are supposed to give only directories in the search path of find, ii) if the list of files and directories is huge, the command will have performance issues. 

4. Find all files and directories other than the file named temp: 
$ find . -name temp -prune
./C/temp
./temp
'-name temp' tells to search for all files with the name temp. prune tells not to traverse into directories named temp. Hence, the output is list of all files and directories with the name temp. What prune achieved here is had there been a file with the name temp inside any temp directory, it would not have got printed. 

5. Find all the files except the ones under the temp directory: 
$ find . -name temp -prune -o -print
.
./area.pm
./C
./C/f2.c
./test.c
-o is the OR operator. find will prune directories named temp. Due to the OR condition, all the other files(files other than the ones present in the temp directory) gets printed.
   Did you expect the temp directory to get printed? In the last example, we saw the directories ./temp and ./C/temp got printed, but not now. This is the effect of the -print option. By default, the find command prints all the files matching the criteria. However, once the -print option is specified, it will print files only on explicit print instructions. In this find command, -print is associated in the other side of the OR condition, and hence nothing will get printed from the 1st part of the condition. 

6. Find all the files except the ones under the temp directory. Also print the temp directories if present: 
$ find . -name temp -prune -print -o -print
.
./area.pm
./C
./C/temp
./C/f2.c
./test.c
./temp
The only difference here is the print statement being present in the first half as well.

7. Find all the .c files except the ones present in the C directory: 
$ find . -type d -name C -prune -o -name "*.c" -print
./test.c
./temp/a.c
  The 1st part prunes out the C directories. In the second part,  all the .c files are found and printed except the ones present in C.

8. Find all the .c files except the ones present in the C and temp directory: 
$ find . -type d \( -name C -o -name temp \) -prune -o -name "*.c" -print
./test.c
   To specify multiple directories with the -name option, -o should be used as an OR condition.

9. Find all files modified in the last one day except the ones present in the temp directory: 
$ find . -type d  -name temp -prune -o -mtime -1 -print
.
./area.pm
./C
./C/temp
./C/f2.c
./test.c
Usage of mtime makes find to search for files modified in the last day alone.

10. Find only regular files modified in the last one day except the ones present in the temp directory: 
$ find . -type d  -name temp -prune -o  -type f -mtime -1 -print
./area.pm
./C/temp
./C/f2.c
./test.c
Using the -type f option, find will find only the regular files alone.

11. Find all files whose permission is 644 except the ones present in the temp directory: 
$ find . -name "temp" -prune -o -perm 644 -print
./area.pm
./C/f2.c
  -perm option in find allows to find files with specific permissions. permission 644 indicates files with permission rw-r--r--.

12. Same using the wholename option and prune to exclude directory: 
$ find . -wholename "./temp" -prune -o -perm 644 -print
./area.pm
./C/temp
./C/f2.c
find has a switch with the name 'wholename'. Say, in your directory tree, there might be more than one temp directory. The earlier approaches will prune all the temp dierctories. In case, if the requirement is to prune a specific temp directory, then you can give the path of the directory itself. Note: The path specified in the wholename option should be relative to the search path specified, not the absolute path. 

 13. Using exec and prune to exclude directory in-place of name: 
$ find . -name temp -exec test '{}' = "./temp" \; -prune -o -perm 644 -print
./area.pm
./C/temp
./C/f2.c
One more way. Using the exec, a condition can be put to check whether the current file is "temp". If so, prune it. '{}' is the file found by the find command.

 14. Using inum and prune to exclude directory in-place of name option: 
$ find .  -inum 17662059 -prune -o -perm 644 -print
./area.pm
./C/temp
./C/f2.c
Same, but using the inode number of the temp directory. inode number is specified using the inum option.

 15. Find the list of all .c files except the ones present in the C directory without using prune:
$ find . ! -path "./C/*" -name "*.c"
./test.c
./temp/a.c
-path option is like the -wholename option. It is used to specify a specific path to search. In this case, '! -path " tells to exclude this path alone. Since the specific path has been excluded in this way, the prune is not needed at all. 

P.S: The find command options maxdepth and mindepth also help in controlling the descending of directories to a certain extent. We will discuss about this in one of our future articles.

* docker
** POSTGRES_PASSWORD= POSTGRES_USER= docker build -t youyougou:0.1.1 .
** POSTGRES_PASSWORD= POSTGRES_USER= docker run -p 127.0.0.1:5432:5432 --name test youyougou:0.1.1
** stop all containers
docker stop $(docker ps -a -q)
docker rm $(docker ps -a -q)
** images
   - docker images
   - docker rmi <id>
** docker run
   - POSTGRES_PASSWORD= POSTGRES_USER= docker run -p 127.0.0.1:5432:5432 --name test2 youyougou:0.1.1
** containers
   - docker ps // list all running containers
   - docker ps -a // list all containers
   - docker rm  <CONTAINER ID> // remove a container
   - docker start <CONTAINER ID> // start a container
* Splunk
** Stats on a load of a specific URL
index="idnex-name" "validate_security" | bucket _time span=1m | stats count by sourcetype,_time
* Ubuntu/i3
** disable a display
xrandr --output VGA-1-2 --off
* Postgresql Docker
** connect to psql
docker run -it --rm --link postgres:postgres postgres psql -h postgres -U postgres
** select a db
you need to close current db connection and open a new one. use:
\c <new-db-name>

* Citrix
** config sound
/opt/Citrix/ICAClient/util/configmgr &
If the above not working
sudo apt-get install alsa-oss
sudo mv /opt/Citrix/ICAClient/wfica /opt/Citrix/ICAClient/wfica-real
create a bash file /opt/Citrix/ICAClient/wfica with
#!/bin/bash
LD_PRELOAD=/usr/lib/x86_64-linux-gnu/libaoss.so /opt/Citrix/ICAClient/wfica-real "$@"
sudo chmod +x /opt/Citrix/ICAClient/wfica
* Emacs
  - start in ubuntu to enable IME
env LC_CTYPE=zh_CN.UTF-8 emacs

